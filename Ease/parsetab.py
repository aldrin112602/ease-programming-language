
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'function_declarationDIVIDE FN LBRACE LPAREN MINUS NAME NUMBER PLUS RBRACE RPAREN TIMES WHITESPACEexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENfunction_declaration : FN NAME LPAREN RPAREN'
    
_lr_action_items = {'FN':([0,],[2,]),'$end':([1,5,],[0,-9,]),'NAME':([2,],[3,]),'LPAREN':([3,],[4,]),'RPAREN':([4,],[5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function_declaration':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function_declaration","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','compile.py',89),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','compile.py',95),
  ('expression -> term','expression',1,'p_expression_term','compile.py',100),
  ('term -> term TIMES factor','term',3,'p_term_times','compile.py',105),
  ('term -> term DIVIDE factor','term',3,'p_term_div','compile.py',110),
  ('term -> factor','term',1,'p_term_factor','compile.py',115),
  ('factor -> NUMBER','factor',1,'p_factor_num','compile.py',120),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','compile.py',125),
  ('function_declaration -> FN NAME LPAREN RPAREN','function_declaration',4,'p_function_declaration','compile.py',134),
]
